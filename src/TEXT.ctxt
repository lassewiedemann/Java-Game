#BlueJ class context
comment0.target=TEXT
comment0.text=\r\n\ Klasse\ TEXT\ zum\ Darstellen\ von\ Texten\ in\ EDU-Engine\r\n\ \r\n\ @author\ \ \ \ \ \ mike_gans@yahoo.de\ \ and\ \ michael\ andonie\r\n\ \r\n\ @version\ \ \ \ \ 4.0\ (2018-08-06)\r\n\ \r\n\ @changelog\ \ \ 4.0\ Umstieg\ auf\ EA\ 4\r\n\ \r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \r\n
comment1.params=x\ y\ textHoehe\ text
comment1.target=TEXT(double,\ double,\ double,\ java.lang.String)
comment1.text=\r\n\ Konstruktor\ der\ Klasse\ Text.\r\n\r\n\ @param\ \ \ x\ \ \ \ \ \ \ \ \ \ \ x-Koordinate\ im\ Fenster\r\n\ @param\ \ \ y\ \ \ \ \ \ \ \ \ \ \ y-Koordinate\ im\ Fenster\r\n\ @param\ \ \ textHoehe\ \ \ Hoehe\ des\ Texts\ in\ Bildschirm-Metern\r\n\ @param\ \ \ text\ \ \ \ anzuzeigender\ Text\r\n
comment10.params=ea
comment10.target=boolean\ beruehrt(ea.edu.EduActor)
comment10.text=\r\n\ Prueft,\ ob\ ein\ anderes\ Grafik-Objekt\ beruehrt\ wird.\ \r\n\r\n\ @param\ \ \ ea\ \ \ Ein\ anderes\ BILD,\ RECHTECK,\ KREIS,\ DREIECK,\ ...\r\n\ \r\n\ @return\ \ true,\ wenn\ sich\ die\ beiden\ Objekte\ ueberschneiden\r\n
comment11.params=x\ y
comment11.target=boolean\ beinhaltetPunkt(double,\ double)
comment11.text=\r\n\ Diese\ Methode\ prueft,\ ob\ ein\ bestimmter\ Punkt\ in\ dem\ Objekt\ enthalten\ ist.\ <br\ />\r\n\ z.B.\ interessant\ zum\ Auswerten\ von\ Maus-Klicks.\r\n\r\n\ @param\ \ \ x\ \ \ x-Koordinate\ des\ Punkts\ (in\ Bildschirm-Metern)\r\n\ @param\ \ \ y\ \ \ x-Koordinate\ des\ Punkts\ (in\ Bildschirm-Metern)\r\n\ \r\n\ @return\ \ \ \ \ \ true,\ wenn\ Punkt\ innerhalb\ der\ Grafik\r\n
comment12.params=x\ y
comment12.target=void\ setzeMittelpunkt(double,\ double)
comment12.text=\r\n\ Setzt\ den\ Mittelpunkt\ des\ Objekts\ auf\ einen\ anzugebenden\ Punkt.\ \r\n\r\n\ @param\ \ \ x\ \ \ x-Koordinate\ des\ Mittelpunkts\r\n\ @param\ \ \ y\ \ \ y-Koordinate\ des\ Mittelpunkts\r\n
comment13.params=
comment13.target=int\ nenneEbenenposition()
comment13.text=\r\n\ Nennt\ die\ Nummer\ der\ Ebene,\ in\ der\ dieses\ Objekt\ derzeit\ gezeichnet\ wird.\ \r\n\ Durch\ veraendern\ der\ Ebenen-Nummer\ kann\ man\ Objekte\ vor\ /\ hinter\ andere\ stellen.\ \r\n\ Ebenen\ mit\ groesserer\ Nummer\ verdecken\ Ebenen\ mit\ kleinerer\ Nummer.\r\n\r\n\ @return\ \ Ebenen-Nummer\:\ -1\=Hintergrund\ ;\ 0\=Standard\ (ueberdeckt\ Hintergrund)\ ,\ 1\=weiter\ vorne\ (ueberdeckt\ Hintergrund\ und\ Ebene\ 0)\ ;\ ...\r\n
comment14.params=
comment14.target=double\ nenneMx()
comment14.text=\r\n\ Nennt\ die\ x-Koordinate\ des\ Mittelpunkts\ dieses\ Objekts.\ \r\n\r\n\ @return\ \ x-Koordinate\ des\ Mittelpunkts\r\n
comment15.params=
comment15.target=double\ nenneMy()
comment15.text=\r\n\ Nennt\ die\ y-Koordinate\ des\ Mittelpunkts\ dieses\ Objekts.\ \r\n\r\n\ @return\ \ y-Koordinate\ des\ Mittelpunkts\r\n
comment16.params=sichtbarNeu
comment16.target=void\ setzeSichtbar(boolean)
comment16.text=\r\n\ Macht\ das\ Objekt\ sichtbar\ /\ unsichtbar.\ \r\n\r\n\ @param\ \ \ sichtbarNeu\ \ \ \ \ true,\ wenn\ die\ Grafik\ sichtbar\ sein\ soll,\ sonst\ false\r\n
comment17.params=
comment17.target=boolean\ nenneSichtbar()
comment17.text=\r\n\ Prueft,\ od\ dieses\ Objekt\ gerade\ sichtbar\ ist.\ \r\n\r\n\ @return\ \ true,\ wenn\ die\ Grafik\ gerade\ sichbar\ ist,\ sonst\ false\r\n
comment18.params=winkelAenderung
comment18.target=void\ drehenUm(double)
comment18.text=\r\n\ Dreht\ die\ Grafik\ um\ einen\ Winkel\r\n\r\n\ @param\ \ \ winkelAenderung\ \ \ \ \ +\:\ mathematisch\ positiver\ Drehsinn\ (gegen\ den\ Uhrzeigersinn)\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ -\:\ mathematisch\ negativer\ Drehsinn\ (im\ Uhrzeigersinn)\r\n
comment19.params=neuerDrehwinkel
comment19.target=void\ setzeDrehwinkel(double)
comment19.text=\r\n\ Setzt\ den\ Drehwinkel\ auf\ eine\ absoluten\ neuen\ Wert\r\n\r\n\ @param\ \ \ neuerDrehwinkel\ \ \ \ \ der\ neue\ Drehwinkel\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ +\:\ mathematisch\ positiver\ Drehsinn\ (gegen\ den\ Uhrzeigersinn)\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ -\:\ mathematisch\ negativer\ Drehsinn\ (im\ Uhrzeigersinn)\r\n
comment2.params=x\ y\ textHoehe\ zahl
comment2.target=TEXT(double,\ double,\ double,\ int)
comment2.text=\r\n\ TEXT\ Konstruktor\r\n\r\n\ @param\ \ \ x\ \ \ \ \ \ \ \ \ \ \ x-Koordinate\ im\ Fenster\r\n\ @param\ \ \ y\ \ \ \ \ \ \ \ \ \ \ y-Koordinate\ im\ Fenster\r\n\ @param\ \ \ textHoehe\ \ \ Hoehe\ des\ Texts\ in\ Bildschirm-Metern\r\n\ @param\ \ \ zahl\ \ \ \ \ \ \ \ anzuzeigende\ Zahl\r\n
comment20.params=
comment20.target=double\ nenneDrehwinkel()
comment20.text=\r\n\ Nennt\ den\ Winkel,\ um\ den\ die\ Grafik\ gegenueber\ ihrer\ Erzeugung\ gedreht\ wurde.\ \r\n\r\n\ @return\ \ \ \ \ \ der\ Winkel,\ um\ den\ die\ Grafik\ gedreht\ wurde\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ 0\:\ wenn\ nicht\ gedreht\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ +\:\ wenn\ mathematisch\ positiver\ Drehsinn\ (gegen\ den\ Uhrzeigersinn)\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ -\:\ wenn\ mathematisch\ negativer\ Drehsinn\ (im\ Uhrzeigersinn)\r\n
comment21.params=ea
comment21.target=double\ berechneAbstandX(ea.edu.EduActor)
comment21.text=\r\n\ Diese\ Methode\ prueft,\ wie\ weit\ der\ Mittelpunkt\ dieses\ Objekts\ vom\ Mittelpunkt\ \r\n\ eines\ anderen\ Grafik-Objekts\ in\ x-Richtung\ entfernt\ ist.\r\n\ \r\n\ @param\ \ \ grafikObjekt\ \ \ \ Das\ andere\ Grafik-Objekt\r\n\ \r\n\ @return\ \ Abstand\ (in\ Pixeln)\ dieses\ Rechtecks\ vom\ anderen\ Grafik-Objekt\ in\ x-Richtung\ \r\n\ \ \ \ \ \ \ \ \ \ (>0,\ wenn\ dieses\ Rechteck\ rechts\ des\ anderen\ Grafik-Objekts\ liegt)\r\n
comment22.params=ea
comment22.target=double\ berechneAbstandY(ea.edu.EduActor)
comment22.text=\r\n\ Diese\ Methode\ prueft,\ wie\ weit\ der\ Mittelpunkt\ dieses\ Objekts\ vom\ Mittelpunkt\ \r\n\ eines\ anderen\ Grafik-Objekts\ in\ y-Richtung\ entfernt\ ist.\r\n\ \r\n\ @param\ \ \ grafikObjekt\ \ \ \ Das\ andere\ Grafik-Objekt\r\n\ \r\n\ @return\ \ Abstand\ (in\ Pixeln)\ dieses\ Kreises\ vom\ anderen\ Grafik-Objekt\ in\ y-Richtung\ \r\n\ \ \ \ \ \ \ \ \ \ (>0,\ wenn\ dieser\ Kreis\ unterhalb\ des\ anderen\ Grafik-Objekts\ liegt)\r\n
comment3.params=text
comment3.target=void\ setzeInhalt(java.lang.String)
comment3.text=\r\n\ Setzt\ den\ angezeigten\ Text\ neu.\r\n\r\n\ @param\ \ \ text\ \ \ \ Der\ neue\ Text\r\n
comment4.params=zahl
comment4.target=void\ setzeInhalt(double)
comment4.text=\r\n\ Setzt\ den\ angezeigten\ Text\ neu.\r\n\r\n\ @param\ \ \ text\ \ \ \ Der\ neue\ Text\r\n
comment5.params=schriftHoehe
comment5.target=void\ setzeSchriftHoehe(double)
comment5.text=\r\n\ Setzt\ die\ Schriftgroesse\ auf\ einen\ neuen\ Wert.\r\n\r\n\ @param\ \ \ schriftHoehe\ \ \ \ neue\ Schrifthoehe\ in\ Bildschirm-Metern\r\n
comment6.params=schriftfarbe
comment6.target=void\ setzeFarbe(java.lang.String)
comment6.text=\r\n\ Setzt\ die\ Schriftfarbe\ neu.\r\n\r\n\ @param\ \ \ schriftfarbe\ \ \ \ Die\ neue\ Schriftfarbe\r\n
comment7.params=ttfDatei
comment7.target=void\ setzeSchriftart(java.lang.String)
comment7.text=\r\n\ Setzt\ die\ Schriftart.\ Diese\ muss\ als\ TrueTypeFont\ als\ Datei\ im\ Projekt\ liegen.\ \r\n\r\n\ @param\ \ \ ttfDatei\ \ \ \ Pfad\ zur\ TTF-Datei\r\n
comment8.params=schriftStil
comment8.target=void\ setzeStil(int)
comment8.text=\r\n\ Setzt\ den\ Schriftstil\ (fett,\ kursiv)\ des\ Textes.\ \r\n\r\n\ @param\ \ \ schriftStil\ \ \ \ \ 0\=normal\ ,\ 1\=fett\ ,\ 2\=kursiv\ ,\ 3\=fett+kursiv\ \r\n
comment9.params=deltaX\ deltaY
comment9.target=void\ verschiebenUm(double,\ double)
comment9.text=\r\n\ Verschiebt\ das\ Objekt\ um\ die\ angegebenen\ Pixel.\ \r\n\r\n\ @param\ \ \ deltaX\ \ Bildschirm-Meter\ in\ x-Richtung\r\n\ @param\ \ \ deltaY\ \ Bildschirm-Meter\ in\ y-Richtung\r\n
numComments=23
