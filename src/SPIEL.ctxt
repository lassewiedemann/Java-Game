#BlueJ class context
comment0.target=SPIEL
comment0.text=\r\n\ Die\ Klasse\ SPIEL\ ist\ ein\ Template.\ Es\ startet\ alles\ Notwendige\ fuer\ ein\ Spiel.\r\n\ (Einzige\ Voraussetzung\ ist,\ dass\ die\ Engine-Alpha-Bibliothek\ im\ Suchpfad\ erreichbar\ ist.)\r\n\ \r\n\ Es\ gibt\ Tastatur-Ereignisse,\ Maus-Ereignisse,\ Timer-Events\ und\ Frame-Update-Events.\r\n\ \r\n\ \r\n\ @author\ \ \ \ \ \ Michael\ Andonie\ und\ Mike\ Ganshorn\r\n\ \r\n\ @version\ \ \ \ \ 4.0\ (2019-08-07)\r\n\ \r\n\ @changelog\ \ \ 4.0\ Umstieg\ auf\ EA\ 4\r\n\ \r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ Ticker\ startet\ NICHT\ mehr\ automatisch\ \!\!\!\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \r\n\ \r\n
comment1.params=
comment1.target=SPIEL()
comment1.text=\r\n\ Erstellt\ ein\ einfaches\ Spiel\:\ 800\ x\ 600\ Pixel\ ,\ ohne\ Punktestand\ und\ Maus.\ <br\ />\ \r\n\ Ueberschreibe\ bei\ Bedarf\ die\ Methoden\ tick(),\ tasteReagieren(int\ taste),\ mausKlickReagieren(double\ x,\ double\ y),\ ....\r\n
comment10.params=sekunden
comment10.target=void\ tickerIntervallSetzen(double)
comment10.text=\r\n\ Setzt\ das\ Ticker-Intervall.\r\n\ \r\n\ @param\ \ \ sekunden\ \ \ \ Die\ Zeit\ in\ Sekunden\ zwischen\ zwei\ Aufrufen\ der\ tick()-Methode.\r\n\ \r\n\ @see\ \ \ \ \ \#tickerNeuStarten(double)\r\n\ @see\ \ \ \ \ \#tickerStoppen(double)\r\n\ @see\ \ \ \ \ \#tick()\r\n
comment11.params=
comment11.target=void\ tickerStoppen()
comment11.text=\r\n\ Stoppt\ die\ Ticker-Funktion.\ Die\ tick()-Methode\r\n\ wird\ nicht\ weiter\ aufgerufen.\ Der\ automatische\ Aufruf\ der\ \r\n\ tick()-Methode\ kann\ durch\ die\ Methode\ \r\n\ tickerNeuStarten(double\ sekunden)\ wiedergestartet\ werden.\r\n\ \r\n\ @see\ \ \ \ \ \#tickerNeuStarten(double)\r\n\ @see\ \ \ \ \ \#tickerIntervallSetzen(double)\r\n\ @see\ \ \ \ \ \#tickerStoppen(double)\r\n
comment12.params=sekunden
comment12.target=void\ tickerNeuStarten(double)
comment12.text=\r\n\ Startet\ den\ Ticker\ neu.\r\n\ \r\n\ @param\ \ \ sekunden\ \ \ \ \ \ Die\ Zeit\ in\ Sekunden\ zwischen\ zwei\ Aufrufen\ der\ tick()-Methode.\ \r\n\ \r\n\ @see\ \ \ \ \ \#tickerIntervallSetzen(double)\r\n\ @see\ \ \ \ \ \#tick()\r\n\ @see\ \ \ \ \ \#tickerStoppen()\r\n
comment13.params=
comment13.target=void\ tick()
comment13.text=\r\n\ Wird\ nach\ Aufruf\ von\ tickerNeuStarten(double)\ regelmaessig\ automatisch\ aufgerufen.\ So\ kommt\ Bewegung\ ins\ Spiel\!\ \r\n\ Tick-Intervall\ kann\ angepasst\ werden.\ Ticker\ muss\ erst\ gestartet\ werden\!\r\n\ \r\n\ @see\ \ \ \ \ \#tickerNeuStarten(double)\r\n\ @see\ \ \ \ \ \#tickerStoppen()\r\n\ @see\ \ \ \ \ \#tickerIntervallSetzen(double)\r\n
comment14.params=taste
comment14.target=void\ tasteReagieren(int)
comment14.text=\r\n\ Wird\ bei\ jedem\ <b>Druecken\ einer\ Taste/b>\ automatisch\ aufgerufen\ \r\n\ und\ automatisch\ das\ Kuerzel\ der\ entsprechenden\ Taste\ mitgegeben.\r\n\ \r\n\ @param\ \ \ taste\ \ \ ganzzahliges\ Kuerzel\ der\ Taste\ \r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ oder\ ENUM-Typ\ aus\ <b>Klasse\ TASTE</b>\ (darin\ die\ Klassen-Doku\ lesen)\r\n
comment15.params=taste
comment15.target=void\ tasteLosgelassenReagieren(int)
comment15.text=\r\n\ Wird\ bei\ jedem\ <b>Loslassen\ einer\ Taste</b>\ automatisch\ aufgerufen\ \r\n\ und\ automatisch\ das\ Kuerzel\ der\ entsprechenden\ Taste\ mitgegeben.\r\n\ \r\n\ @param\ \ \ taste\ \ \ ganzzahliges\ Kuerzel\ der\ Taste\ \r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ oder\ ENUM-Typ\ aus\ <b>Klasse\ TASTE</b>\ (darin\ die\ Klassen-Doku\ lesen)\r\n
comment16.params=taste
comment16.target=boolean\ tasteGedrueckt(int)
comment16.text=\r\n\ Ueberprueft,\ ob\ eine\ <b>Taste\ gerade\ gedrueckt\ gehalten</b>\ wird.\r\n\ \r\n\ @param\ \ \ taste\ \ \ Der\ ganzzahlige\ Wert,\ der\ fuer\ die\ gedrueckte\ Taste\ steht.\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Details\ koennen\ im\ ENUM-Typen\ der\ <b>Klasse\ TASTE</b>\ nachgelesen\ werden.\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \r\n\ @return\ \ true,\ falls\ die\ Taste\ gedrueckt\ gehalten\ wird.\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \r\n
comment17.params=x\ y
comment17.target=void\ klickReagieren(double,\ double)
comment17.text=\r\n\ Wird\ bei\ jedem\ <b>Mausklick\ (Linksklick)</b>\ automatisch\ aufgerufen.\ \r\n\ <b>\ \!\!\!\ Funktioniert\ nur,\ wenn\ ein\ Konstruktor\ von\ SPIEL\ mit\ Maus-Unteratuetzung\ aufgerufen\ wurde\ \!\!\!\ </b>\r\n\ \r\n\ @param\ \ \ x\ \ \ \ \ \ \ \ \ \ \ Die\ X-Koordinate\ des\ Klicks\r\n\ @param\ \ \ y\ \ \ \ \ \ \ \ \ \ \ Die\ Y-Koordinate\ des\ Klicks\r\n
comment18.params=x\ y
comment18.target=void\ klickLosgelassenReagieren(double,\ double)
comment18.text=\r\n\ Wird\ bei\ jedem\ <b>Loslassen\ der\ Mausktaste\ (Linksklick)</b>\ automatisch\ aufgerufen.\ \r\n\ <b>\ \!\!\!\ Funktioniert\ nur,\ wenn\ ein\ Konstruktor\ von\ SPIEL\ mit\ Maus-Unteratuetzung\ aufgerufen\ wurde\ \!\!\!\ </b>\r\n\ \r\n\ @param\ \ \ x\ \ \ \ \ \ \ \ \ \ \ Die\ X-Koordinate\ des\ Klicks\r\n\ @param\ \ \ y\ \ \ \ \ \ \ \ \ \ \ Die\ Y-Koordinate\ des\ Klicks\r\n
comment19.params=drehung
comment19.target=void\ mausRadReagieren(double)
comment19.text=\r\n\ Wird\ bei\ jedem\ <b>Drehen\ am\ Mausrad</b>\ automatisch\ aufgerufen.\ \r\n\ <b>\ \!\!\!\ Funktioniert\ nur,\ wenn\ ein\ Konstruktor\ von\ SPIEL\ mit\ Maus-Unteratuetzung\ aufgerufen\ wurde\ \!\!\!\ </b>\r\n\ \r\n\ @param\ \ \ drehung\ \ \ \ \ Wie\ stark\ das\ Rad\ gedreht\ wurde,\ inkl.\ Vorzeichen\:\ \r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ +\ Mausrad\ von\ sich\ weg\ drehen\ ;\ \ -\ zu\ sich\ hin\ drehen\r\n
comment2.params=fensterHoehe\ fensterBreite
comment2.target=SPIEL(int,\ int)
comment2.text=\r\n\ SPIEL\ Konstruktor\ ohne\ Maus.\r\n\r\n\ @param\ \ \ fensterHoehe\ \ \ \ Hoehe\ des\ Fensters\ in\ Pixeln\r\n\ @param\ \ \ fensterBreite\ \ \ Breite\ des\ Fensters\ in\ Pixeln\r\n
comment20.params=sekunden
comment20.target=void\ bildAktualisierungReagieren(double)
comment20.text=\r\n\ Wird\ fuer\ jeden\ Frame\ (Bild-Aktualisierung)\ des\ Spiels\ exakt\ einmal\ aufgerufen.\ \r\n\ \r\n\ Extra-Info\ fuer\ Nerds\:\ nur\ in\ der\ aktuellen\ Szene\!\r\n\ \ -->\ EDU\ Games\ agieren\ in\ der\ Regel\ nur\ innerhalb\ einer\ Scene\ ("Hauptszene").\ \r\n\ \ \ \ \ \ Du\ kannst\ aber\ mehrere\ Szenen\ erzeugen.\r\n\ \r\n\ @param\ \ \ sekunden\ \ \ \ Die\ Anzahl\ an\ Sekunden,\ die\ seit\ dem\ letzten\ Frame\ vergangen\ sind.\r\n
comment21.params=dX\ dY
comment21.target=void\ verschiebeKamera(double,\ double)
comment21.text=\r\n\ Verschiebt\ die\ Kamera\ um\ ein\ Stueck.\ \r\n\r\n\ @param\ \ \ dX\ \ \ \ \ \ Anzahl\ Pixel\ in\ x-Richtung\r\n\ @param\ \ \ dY\ \ \ \ \ \ Anzahl\ Pixel\ in\ y-Richtung\r\n
comment22.params=zoom
comment22.target=void\ setzeKamerazoom(double)
comment22.text=\r\n\ Setzt\ den\ Zoom-Faktor\ der\ Kamera.\ 1.0\ ist\ normal.\ \r\n\r\n\ @param\ \ \ zoom\ \ \ \ Zoom-Faktor\:\ >1\ vergroessert\ ;\ <1\ (aber\ >0)\ verkleinert\r\n
comment23.params=
comment23.target=double\ nenneKamerazoom()
comment23.text=\r\n\ Nennt\ den\ aktuellen\ Zoom-Wert\ der\ Kamera.\ \r\n\r\n\ @return\ \ aktueller\ Zoom-Wert\ der\ Kamera\:\ >1\ vergroessert\ ;\ <1\ (aber\ >0)\ verkleinert\r\n
comment24.params=focus
comment24.target=void\ setzeKamerafokus(ea.edu.EduActor)
comment24.text=\r\n\ Setze\ den\ Kamera-Fokus\ auf\ ein\ bestimmtes\ Objekt.\ \r\n\r\n\ @param\ \ \ focus\ \ \ Das\ neue\ Objekt\ im\ Zentrum\ der\ Kamera\r\n
comment25.params=winkelInGrad
comment25.target=void\ rotiereKamera(double)
comment25.text=\r\n\ Rotiert\ die\ Kamera\ im\ oder\ gegen\ den\ Uhrzeigersinn.\ \r\n\r\n\ @param\ \ \ winkelInGrad\ \ \ \ Winkel,\ um\ den\ gedreht\ werden\ soll.\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ >0\ im\ Uhrzeigersinn\ ;\ <0\ gegen\ den\ Uhrzeigersinn\r\n
comment26.params=winkelInGrad
comment26.target=void\ setzeKamerarotation(double)
comment26.text=\r\n\ Setzt\ den\ Rotationswinkel\ der\ Kamera\ auf\ einen\ bestimmten\ Wert.\ \r\n\r\n\ @param\ \ \ winkelInGrad\ \ \ \ Der\ neue\ Kamera-Winkel\ in\ Grad\r\n
comment27.params=name
comment27.target=void\ benenneSzene(java.lang.String)
comment27.text=\r\n\ Benennt\ eine\ Szene\r\n\r\n\ @param\ \ \ name\ \ \ \ neuer\ Name\ der\ Szene\r\n
comment28.params=name
comment28.target=void\ setzeSzene(java.lang.String)
comment28.text=\r\n\ Laedt\ eine\ (andere)\ Szene\r\n\r\n\ @param\ \ \ name\ \ \ \ Name\ der\ zu\ ladenden\ Szene\r\n
comment29.params=
comment29.target=void\ neueSzene()
comment29.text=\r\n\ Erzeugt\ eine\ neue\ Szene\r\n
comment3.params=maus
comment3.target=SPIEL(boolean)
comment3.text=\r\n\ SPIEL\ Konstruktor\ 800\ x\ 600\ Pixel\ mit\ Mausunterstuetzung.\r\n\r\n\ @param\ \ \ maus\ \ \ \ \ \ \ \ 'true'\ mit\ Maus\ ,\ 'false'\ ohne\ Maus\r\n
comment30.params=nachricht
comment30.target=void\ zeigeNachricht(java.lang.String)
comment30.text=\r\n\ Gibt\ ein\ <b>blockierendes</b>\ Nachricht-Fenster\ aus.\r\n\r\n\ @param\ \ \ nachricht\ \ \ angezeigte\ Nachricht\ in\ dem\ Fenster\r\n
comment31.params=frage
comment31.target=boolean\ zeigeNachrichtMitJaNein(java.lang.String)
comment31.text=\r\n\ Gibt\ ein\ <b>blockierendes</b>\ Frage-Fenster\ aus.\r\n\r\n\ @param\ \ \ frage\ \ \ angezeigte\ Frage\ in\ dem\ Fenster\r\n\ @return\ \ 'true'\ \=\ Ja\ ,\ 'false'\ \=\ Nein\r\n
comment32.params=frage
comment32.target=boolean\ zeigeNachrichtMitBestaetigung(java.lang.String)
comment32.text=\r\n\ Gibt\ ein\ <b>blockierendes</b>\ Frage-Fenster\ aus.\r\n\r\n\ @param\ \ \ frage\ \ \ angezeigte\ Frage\ in\ dem\ Fenster\r\n\ @return\ \ 'true'\ \=\ Ok\ ,\ 'false'\ \=\ Abbrechen\r\n
comment33.params=nachricht
comment33.target=java.lang.String\ zeigeNachrichtMitEingabe(java.lang.String)
comment33.text=\r\n\ Gibt\ ein\ <b>blockierendes</b>\ Eingabe-Fenster\ aus.\r\n\r\n\ @param\ \ \ angezeigte\ Nachricht\ in\ dem\ Fenster\r\n\ @return\ \ Benutzer-Eingabe\r\n
comment34.params=meterProQuadratsekunde
comment34.target=void\ setzeSchwerkraft(double)
comment34.text=\r\n\ Setzt\ die\ Intensitaet\ der\ Schwerkraft\ (normal\=9.8).\ \r\n\r\n\ @param\ \ \ meterProQuadratsekunde\ \ \ \ \ \ Wert\ fuer\ die\ gewuenschte\ Fallbeschleunigung\r\n
comment35.params=runnable
comment35.target=void\ parallel(java.lang.Runnable)
comment35.text=\r\n\ Die\ Methode\ 'parallel'\ erwartet\ einen\ Lambda-Ausdruck\ der\ Form\:\ \r\n\ \ ()\ ->\ methodenAufruf(parameterListe)\ \ \ oder\ \ \ \r\n\ \ ()\ ->\ {methode1(...);methode2(...);...;}\ \r\n\ <b>Das\ ist\ z.B.\ noetig,\ wenn\ eine\ Methode\ mit\ 'warte(...)'\ durch\ Tasten\ ausgefuehrt\ werden\ soll\!</b>\r\n\r\n\ @param\ \ \ runnable\ \ \ \ Ein\ oder\ mehrere\ Methodenaufrufe\ als\ Lambda-Ausdruck\r\n
comment4.params=fensterBreite\ fensterHoehe\ maus
comment4.target=SPIEL(int,\ int,\ boolean)
comment4.text=\r\n\ SPIEL\ Konstruktor\ mit\ allen\ Moeglichkeiten\ <br\ />\ .\r\n\ Ueberschreibe\ bei\ Bedarf\ die\ Methoden\ tick()\ bzw.\ tasteReagieren(int\ taste).\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \r\n\ @param\ \ \ fensterBreite\ \ \ in\ Pixel\r\n\ @param\ \ \ fensterHoehe\ \ \ \ in\ Pixel\r\n\ @param\ \ \ maus\ \ \ \ \ \ \ \ \ \ \ \ true\ \ \:\ man\ sieht\ den\ Mauszeiger\ \ (Klick-Spiel)\ \r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ false\ \:\ man\ sieht\ ihn\ nicht\ \ \ \ \ \ \ (reines\ Tastatur-Spiel)\r\n
comment5.params=pfad
comment5.target=void\ setzeHintergrundgrafik(java.lang.String)
comment5.text=\r\n\ Setzt\ eine\ Hintergrundgrafik\ fuer\ das\ Spiel.\ Dieses\ Bild\ liegt\ immer\ hinter\ allen\ anderen\ Objekten.\ \r\n\ \r\n\ @param\ \ \ pfad\ \ \ \ Der\ Pfad\ der\ Bilddatei\ (jpg,\ bmp,\ png)\ des\ Bildes,\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ das\ benutzt\ werden\ soll.\ zB\:\ "hintergrund.jpg"\r\n
comment6.params=anzeigen
comment6.target=void\ zeigeKoordinatensystem(boolean)
comment6.text=\r\n\ Blendet\ das\ Koordinaten-System\ ein/aus\ und\ zeigt/versteckt\ die\ Collider\ der\ Grafik-Objekte\r\n\r\n\ @param\ \ \ anzeigen\ \ \ \ einblenden\ \=\ true\ ;\ \ ausblenden\ \=\ false\r\n
comment7.params=erkunden
comment7.target=void\ setzeErkundungsModus(boolean)
comment7.text=\r\n\ Methode\ zum\ Verschieben\ der\ Kamera\ durch\ die\ Pfeiltasten\ \r\n\ und\ zum\ Zoomen\ durch\ das\ Mausrad\r\n\ \r\n\ @param\ \ \ erkunden\ \ \ \ einschalten\:\ true\ ,\ \ ausschalten\:\ false\r\n
comment8.params=von\ bis
comment8.target=int\ zufallszahlVonBis(int,\ int)
comment8.text=\r\n\ Gibt\ eine\ ganzzahlige\ Zufallszahl\ aus.\r\n\ \r\n\ @param\ von\ \ \ Die\ Untergrenze\ der\ Zufallszahl\ (INKLUSIVE)\r\n\ @param\ bis\ \ \ Die\ Obergrenze\ der\ Zufallszahl\ (INKLUSIVE)\r\n\ \r\n\ @return\ \ \ \ \ \ Eine\ Zufallszahl\ z\ mit\:\ \ \ von\ <\=\ z\ <\=\ bis\r\n
comment9.params=sekunden
comment9.target=void\ warte(double)
comment9.text=\r\n\ Wartet\ um\ die\ Angegebene\ Anzahl\ an\ Millisekunden\ BLOCKIEREND\ bis\ zur\ Ausfuehrung\ des\ naechsten\ Befehls.\ \r\n\ \r\n\ <b>\ \!\!\!\ V\ O\ R\ S\ I\ C\ H\ T\ \!\!\!\ \ Nur\ verwenden\ bei\ reiner\ Grafik\ ohne\ Engine-Alpha\ Automatismen\ \!\!\!\ <br\ />\r\n\ \r\n\ Geht\ NICHT\ mit\ tick(),\ tasteReagieren(...),\ mausReagieren(...),\ ...\ \!\!\!\ </b>\r\n\r\n\ @param\ \ \ sekunden\ \ \ \ \ \ Die\ zu\ wartende\ Zeit\ in\ Sekunden\r\n
numComments=36
